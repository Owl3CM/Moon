import { promises, readFileSync, writeFileSync } from "fs";
import { cssFolder } from "./src/scriptsTS/controller";

const config = JSON.parse(await promises.readFile("./moon.config.json"));

const propByKeyname = {};
const colorsKeysNames = {};
config.styles.forEach((style) => {
  const { props, variableName, values } = style;
  Object.values(props).forEach((prop) => {
    propByKeyname[prop] = variableName;
  });
});
const colorsKeys = {
  bg: "background-color",
  text: "color",
  fill: "fill",
  border: "border-color",
  stroke: "stroke",
  p: "padding",
};
const cssRules = [];
let content = "";
const fileContent = readFileSync("./src/main.tsx", "utf8");
const pattern = /([a-zA-Z0-9-:]+):\[([a-zA-Z0-9-,]+)\]/g;

const matchs = fileContent.match(pattern);

content = JSON.stringify(matchs) + "\n";
matchs.forEach((match) => {
  // const [...res,classes]=match.split("[")[1].slice(0,-1).split(",")
  const data = match.split(":");
  const rest = data.slice(0, -1).join(":");
  const classes = data.pop().slice(1, -1).split(",");
  const name = rest.split(":").join("\\:") + `\\[${classes.join("\\,")}\\]`;
  let classesContent = "";
  classes.forEach((className) => {
    const [firstPart, secondPart] = splitString(className);
    const t = propByKeyname[firstPart];
    let cssValue = "";
    if (t) {
      cssValue = `var(--${t}-${secondPart})`;
    } else cssValue = secondPart;
    const cssKey = colorsKeys[firstPart];
    // check if the second card is color
    // if (config.colors[secondPart])
    // const cssValue = config.colors[secondPart];
    classesContent += `${cssKey}:${cssValue};`;
  });
  // cssRules.push(`.${res.join("\\:")+"\["+classes.split(",").join("\\,")+"]"}{${classesContent}}`);
  cssRules.push(`.${name}{${classesContent}}`);
  // content+=`.${match.split(":").join("\:")}{${classesContent}}`+"\n"
  // content+=`name:${name} \n rest:${rest}`+"\n" +`classes:${classes}`+"\n" +`classesContent:${classesContent}`+"\n"
});

content = `const test=${JSON.stringify(propByKeyname)}`;
writeFileSync("./test.js", `${content}`);

writeFileSync(
  `${cssFolder}/moon/moon.jit.css`,
  `/* This file is generated by Moon Style. Do not edit it manually. */
${cssRules.join("\n")}`
);

function splitString(inputString) {
  const hyphenIndex = inputString.indexOf("-");
  if (hyphenIndex !== -1) {
    const firstPart = inputString.slice(0, hyphenIndex);
    const secondPart = inputString.slice(hyphenIndex + 1);
    return [firstPart, secondPart];
  }
  return [inputString, ""];
}
