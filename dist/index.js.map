{"version":3,"file":"index.js","sources":["../src/lib/Root.tsx"],"sourcesContent":["import { Theme, Color } from \"./Types\";\r\n\r\nlet dynimcColors: { [key: string]: Color } = {};\r\n\r\nexport const Moon = {\r\n  currentTheme: \"\",\r\n  changeTheme: (theme: Theme) => {\r\n    Moon.removeColors();\r\n    Moon.currentTheme && document.documentElement.classList.remove(Moon.currentTheme);\r\n    document.documentElement.classList.add(theme);\r\n    Moon.currentTheme = theme;\r\n  },\r\n  removeColors: () => {\r\n    const root = document.documentElement;\r\n    Object.entries(dynimcColors).forEach(([key, value]) => {\r\n      const theme = root.style.getPropertyValue(`--${key}`);\r\n      if (theme === value) {\r\n        root.style.removeProperty(`--${key}`);\r\n      }\r\n    });\r\n  },\r\n  setColors: (colors: SetColors) => {\r\n    // removeDynimcTheme();\r\n    dynimcColors = { ...colors };\r\n    setTimeout(() => {\r\n      const root = document.documentElement;\r\n      Object.entries(dynimcColors).forEach(([key, value]) => {\r\n        root.style.setProperty(`--${key}`, `${value}`);\r\n      });\r\n    }, 0);\r\n  },\r\n  setColor: (key: Color, value: string) => {\r\n    const root = document.documentElement;\r\n    root.style.setProperty(`--${key}`, `${value}`);\r\n  },\r\n  removeColor: (key: Color) => {\r\n    const root = document.documentElement;\r\n    root.style.removeProperty(`--${key}`);\r\n  },\r\n};\r\n\r\ninterface SetColors {}\r\n\r\nexport const setThemeVariables = (values: SetColors) => {\r\n  // removeDynimcTheme();\r\n  dynimcColors = { ...values };\r\n  setTimeout(() => {\r\n    const root = document.documentElement;\r\n    Object.entries(dynimcColors).forEach(([key, value]) => {\r\n      root.style.setProperty(`--${key}`, `${value}`);\r\n    });\r\n  }, 0);\r\n};\r\nexport const removeColors = () => {\r\n  console.log({ dynimcVaribles: dynimcColors });\r\n  const root = document.documentElement;\r\n\r\n  Object.entries(dynimcColors).forEach(([key, value]) => {\r\n    const theme = root.style.getPropertyValue(`--${key}`);\r\n    console.log(theme, value, theme === value);\r\n    // if (theme === value) {\r\n    root.style.removeProperty(`--${key}`);\r\n    // }\r\n  });\r\n};\r\n"],"names":["dynimcColors","Moon","currentTheme","changeTheme","theme","removeColors","document","documentElement","classList","remove","add","root","Object","entries","forEach","_a","key","value","style","getPropertyValue","concat","removeProperty","setColors","colors","__assign","setTimeout","setProperty","setColor","removeColor","console","log","dynimcVaribles","values"],"mappings":"wRAEIA,EAAyC,CAAA,EAEhCC,EAAO,CAClBC,aAAc,GACdC,YAAa,SAACC,GACZH,EAAKI,eACLJ,EAAKC,cAAgBI,SAASC,gBAAgBC,UAAUC,OAAOR,EAAKC,cACpEI,SAASC,gBAAgBC,UAAUE,IAAIN,GACvCH,EAAKC,aAAeE,CACrB,EACDC,aAAc,WACZ,IAAMM,EAAOL,SAASC,gBACtBK,OAAOC,QAAQb,GAAcc,SAAQ,SAACC,OAACC,EAAGD,EAAA,GAAEE,EAAKF,EAAA,GACjCJ,EAAKO,MAAMC,iBAAiB,KAAKC,OAAAJ,MACjCC,GACZN,EAAKO,MAAMG,eAAe,KAAKD,OAAAJ,GAEnC,GACD,EACDM,UAAW,SAACC,GAEVvB,EAAYwB,EAAA,GAAQD,GACpBE,YAAW,WACT,IAAMd,EAAOL,SAASC,gBACtBK,OAAOC,QAAQb,GAAcc,SAAQ,SAACC,OAACC,EAAGD,EAAA,GAAEE,EAAKF,EAAA,GAC/CJ,EAAKO,MAAMQ,YAAY,KAAAN,OAAKJ,GAAO,GAAAI,OAAGH,GACxC,GACD,GAAE,EACJ,EACDU,SAAU,SAACX,EAAYC,GACRX,SAASC,gBACjBW,MAAMQ,YAAY,KAAAN,OAAKJ,GAAO,GAAAI,OAAGH,GACvC,EACDW,YAAa,SAACZ,GACCV,SAASC,gBACjBW,MAAMG,eAAe,KAAKD,OAAAJ,GAChC,uCAeyB,WAC1Ba,QAAQC,IAAI,CAAEC,eAAgB/B,IAC9B,IAAMW,EAAOL,SAASC,gBAEtBK,OAAOC,QAAQb,GAAcc,SAAQ,SAACC,OAACC,EAAGD,EAAA,GAAEE,EAAKF,EAAA,GACzCX,EAAQO,EAAKO,MAAMC,iBAAiB,KAAKC,OAAAJ,IAC/Ca,QAAQC,IAAI1B,EAAOa,EAAOb,IAAUa,GAEpCN,EAAKO,MAAMG,eAAe,KAAKD,OAAAJ,GAEjC,GACF,4BArBiC,SAACgB,GAEhChC,EAAYwB,EAAA,GAAQQ,GACpBP,YAAW,WACT,IAAMd,EAAOL,SAASC,gBACtBK,OAAOC,QAAQb,GAAcc,SAAQ,SAACC,OAACC,EAAGD,EAAA,GAAEE,EAAKF,EAAA,GAC/CJ,EAAKO,MAAMQ,YAAY,KAAAN,OAAKJ,GAAO,GAAAI,OAAGH,GACxC,GACD,GAAE,EACL"}