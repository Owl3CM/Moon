import { Controller } from "./controller.js";
import { getDefaultName, getPropsNames } from "./utils.js";
let cssContent = "";
let useStaticNumbers = false;
export const getStyles = async () => {
    Controller.StylesVariables = [];
    const { styles } = Controller.config;
    useStaticNumbers = Controller.config.useStaticNumbers ?? false;
    cssContent = "";
    styles.forEach(generateStyles);
    return `/* This file is generated by Moon Style. Do not edit it manually. */
  :root{\n${Controller.StylesVariables.join("\n")}\n}\n ${cssContent}`;
};
const generateStyles = ({ props, values, variableName }) => {
    if (!props || !Object.keys(props).length) {
        Object.entries(values).forEach(([valueKey, valueValue]) => {
            const _variableName = `--${variableName ? variableName + "-" : ""}${valueKey}`;
            Controller.StylesVariables.push(`${_variableName}:${valueValue};`);
        });
        return;
    }
    Object.entries(values).forEach(([shortName, proprty]) => {
        const _variableName = `--${variableName ? variableName + "-" : ""}${shortName}`;
        Controller.StylesVariables.push(`${_variableName}:${proprty};`);
        const valueName = useStaticNumbers ? proprty : `var(${_variableName})`;
        Object.entries(props).forEach(([prop, shortN]) => {
            const extraProps = getPropsNames(prop);
            const _shortN = shortN ?? getDefaultName(prop);
            extraProps.forEach(({ name, css }) => {
                const _name = name(_shortN);
                const dash = _name && shortName ? "-" : "";
                const className = `${_name}${dash}${shortName}`;
                const classValue = css(valueName);
                Controller.ClassByValue[className] = classValue;
                cssContent += `.${className}{${classValue};}`;
            });
        });
        cssContent += `\n`;
    });
};
